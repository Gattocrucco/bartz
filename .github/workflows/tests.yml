# bartz/workflows/tests.yml
#
# Copyright (c) 2024-2025, The Bartz Contributors
#
# This file is part of bartz.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: tests-docs

# Workflow disabled
if: false

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  UV_VERSION: "0.9.5"

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version-file: '.python-version'
    - uses: pre-commit/action@v3.0.1
      if: github.event_name == 'pull_request'
      with:
        extra_args: --verbose --show-diff-on-failure --from-ref ${{ github.event.pull_request.base.sha }} --to-ref HEAD
    - uses: pre-commit/action@v3.0.1
      if: github.event_name == 'push'
      with:
        extra_args: --verbose --show-diff-on-failure --from-ref HEAD^ --to-ref HEAD

  tests:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target-suffix: ""
          - os: macos-latest
            target-suffix: "-old"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
          cache-suffix: -${{ matrix.os }}${{ matrix.target-suffix }}

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'renv'

      - name: Install R dependencies
        uses: r-lib/actions/setup-renv@v2
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure R PATHS for rpy2 (Linux only)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
          echo "LD_LIBRARY_PATH=$(R RHOME)/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}" >> "$GITHUB_ENV"

      - name: Debug info
        run: |
          ldd "$(R RHOME)/library/methods/libs/methods.so" || true
          uv run --group ci python -c "import rpy2.situation as s; print('\n'.join(map(str, s.iter_info())))"

      - name: Run unit tests
        run: make COVERAGE_SUFFIX=-${{ matrix.os }}${{ matrix.target-suffix }} tests${{ matrix.target-suffix }}

      - name: Save coverage information
        uses: actions/upload-artifact@v4
        with:
          name: coverage.tests-${{ matrix.os }}${{ matrix.target-suffix }}
          path: .coverage.tests-${{ matrix.os }}${{ matrix.target-suffix }}
          include-hidden-files: true
          if-no-files-found: error

  docs:

    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ startsWith(github.ref, 'refs/tags/') && 'main' || '' }}
          fetch-depth: 0  # this fetches the full history

      - name: Ensure main branch exists (for asv publish)
        run: |
          git branch main origin/main || true
          git branch --set-upstream-to=origin/main main || true

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
          cache-suffix: -${{ matrix.os }}${{ matrix.target-suffix }}

      - name: Generate benchmarks visualization
        run: make asv-publish

      - name: Generate documentation
        run: make docs docs-latest

      - name: Save documentation
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            _site/docs
            _site/docs-dev
            _site/benchmarks
          if-no-files-found: error

  covreport:

    runs-on: macos-latest
    needs: [tests]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
          cache-suffix: -${{ matrix.os }}${{ matrix.target-suffix }}

      - name: Get coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: coverage.*
          merge-multiple: true

      - name: List files
        run: |
          pwd
          ls -a
          ls src/bartz

      - name: Print coverage debug
        run: |
          uv run --group ci coverage debug config
          uv run --group ci coverage debug sys
          uv run --group ci coverage debug data

      - name: Generate coverage report
        run: make covreport

      - name: Save coverage report
        uses: actions/upload-artifact@v4
        with:
          name: covreport
          path: _site/coverage
          if-no-files-found: error

  deploy:

    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    needs: [docs, covreport]

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Get documentation and benchmarks
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: _site

      - name: Get coverage report
        uses: actions/download-artifact@v4
        with:
          name: covreport
          path: _site/coverage

      - name: List files
        run: |
          pwd
          ls -a
          ls -a _site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  benchmarks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}
      - run: uv run --group ci python -m asv machine --yes
      - run: make asv-quick
